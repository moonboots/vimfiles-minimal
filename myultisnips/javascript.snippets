###########################################################################
#                            TextMate Snippets                            #
###########################################################################
snippet get "Get Elements"
getElement${1/(T)|.*/(?1:s)/}By${1:T}${1/(T)|(I)|.*/(?1:agName)(?2:d)/}('$2')
endsnippet

snippet '':f "object method string"
'${1:${2:#thing}:${3:click}}': function(element){
	$0
}${10:,}
endsnippet

snippet :f "Object Method" w
${1:method_name}: function(${3:attribute}){
	$0
}${10:,}
endsnippet

snippet f "Anon function" w
function ($1) {
  $0
}$2
endsnippet

snippet :, "Object Value JS"
${1:value_name}:${0:value},
endsnippet

snippet : "Object key key: 'value'"
${1:key}: ${2:"${3:value}"}${4:, }
endsnippet

snippet proto "Prototype (proto)"
${1:class_name}.prototype.${2:method_name} = function(${3:first_argument}) ,,{
	${0:// body...}
};
 
endsnippet

# snippet for "for (...) {...} (faster)"
# for (var ${2:i} = ${1:Things}.length - 1; $2 >= 0; $2--){
	# ${3:$1[$2]}$0
# };
# endsnippet

snippet for "for (...) {...}"
var ${1:length} = ${2:Things}.length;
for (var ${3:i}=0; $3 < $1; $3++) {
  var ${4:current} = $2[$3];
  $0
};
endsnippet

snippet fun "function (fun)"
function ${1:function_name} (${2:argument}) {
	${0:// body...}
}
endsnippet

snippet ife "if ___ else"
if (${1:true}) {$0} else{};
endsnippet

snippet if "if"
if (${1:true}) {$0};
endsnippet

snippet timeout "setTimeout function"
setTimeout(function() {$0}${2:}, ${1:10});
endsnippet

snippet log
console.log($1);
endsnippet

snippet args
var args = Array.prototype.slice.call(arguments)
endsnippet

snippet req
var ${1:module} = require('$1');
endsnippet

snippet ready "JQuery document ready"
$(document).ready(function() {
  $0
});
endsnippet

# vim:ft=snippets:
